import { getUser, getDream, setDream } from '../api.js';

import getAllDreams from './getAllDreams.js';
import checkDreamText from './checkDreamText.js';

export default {
  start: ctx => start(ctx),
  getAllDreams: async ctx => getAllDreams(ctx),

  getCurrentDream: ctx => getCurrentDream(ctx),
  changeDreamPage: ctx => changeDreamPage(ctx),
  checkDreamText: ctx => checkDreamText(ctx),

  sendDream: async ctx => sendDream(ctx),
};

function start(ctx) {
  ctx.session = {};

  ctx.session.isStartActive = true;
  ctx.reply(
    `–ü—Ä–∏–≤—ñ—Ç, ${ctx.update.message.from.first_name}! –ú–µ–Ω–µ –∑–≤–∞—Ç–∏ –°–Ω–æ–≤–∏–¥–µ—Ü—å ‚ú®\n\n` +
      '–Ø –¥–æ–ø–æ–º–æ–∂—É —Ç–æ–±—ñ –ø–æ–¥—ñ–ª–∏—Ç–∏—Å—è —Å–≤–æ—ó–º —Å–Ω–æ–º. –ù–∞—Ç–æ–º—ñ—Å—Ç—å, —Ç–∏ –ø–æ–±–∞—á–∏—à —Å–æ–Ω —ñ–Ω—à–æ–≥–æ —É—á–∞—Å–Ω–∏–∫–∞!\n\n' +
      '–ù–∞—à–µ –∑ —Ç–æ–±–æ—é —Å–ø—ñ–ª–∫—É–≤–∞–Ω–Ω—è –ø–æ–≤–Ω—ñ—Å—Ç—é –∞–Ω–æ–Ω—ñ–º–Ω–µ, –º–∏ –Ω–µ —Ä–æ–∑–≥–æ–ª–æ—à—É—î–º–æ –∞–≤—Ç–æ—Ä—ñ–≤ —Å–Ω–æ–≤–∏–¥—ñ–Ω—å!\n\n' +
      '–ù–∞–ø–∏—à–∏ —Å–≤—ñ–π —Å–æ–Ω —É –ø–æ–ª—ñ –¥–ª—è –≤–≤–µ–¥–µ–Ω—è —Ç–µ–∫—Å—Ç—É ‚¨áÔ∏è',
  );
}

function getCurrentDream(ctx) {
  const dreamId = ctx.update.callback_query.data.match(/[0-9]+/)[0];
  const currentDream = ctx.session.allUserDreams.find(dream => dream.dreamId === Number(dreamId));
  ctx.reply(currentDream);
}

function changeDreamPage(ctx) {
  const action = ctx.update.callback_query.data;

  const dreamPage = ctx.session.currentDreamPage;
  switch (action) {
    case 'dreamListMinus':
      if (dreamPage > 1) {
        ctx.session.currentDreamPage = ctx.session.currentDreamPage - 1;
        ctx.editMessageText('–©–æ–¥–µ–Ω–Ω–∏–∫ —Ç–≤–æ—ó—Ö —Å–Ω—ñ–≤:', createDreamsList(ctx));
      }
      break;
    case 'dreamListPlus':
      const dreams = ctx.session.allUserDreams;
      const step = ctx.session.step;
      const allPageCount = Math.ceil(dreams.length / step);

      if (dreamPage < allPageCount) {
        ctx.session.currentDreamPage = ctx.session.currentDreamPage + 1;
        ctx.editMessageText('–©–æ–¥–µ–Ω–Ω–∏–∫ —Ç–≤–æ—ó—Ö —Å–Ω—ñ–≤:', createDreamsList(ctx));
      }
      break;

    default:
      console.error('Error');
      break;
  }
}

async function sendDream(ctx) {
  const currentUserId = ctx.update.callback_query.from.id;
  let user;
  do {
    user = await getUser();
  } while (currentUserId === user.userId);

  const randomDream = await getDream(user.userId);

  await setDream(ctx);

  ctx.editMessageText(
    '–î—è–∫—É—é, —Ç–∏ —Å—É–ø–µ—Ä! üòá\n\n' +
      '–¢—Ä–∏–º–∞–π —Å–æ–Ω –≤—ñ–¥ –Ω–∞—à–æ–≥–æ –∞–Ω–æ–Ω—ñ–º–Ω–æ–≥–æ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞:\n\n' +
      `<i>‚Äú${randomDream.text}‚Äù</i>\n\n` +
      '–Ø–∫—â–æ —Ö–æ—á–µ—à –ø–æ–¥—ñ–ª–∏—Ç–∏—Å—Ç —â–µ –æ–¥–Ω–∏–º —Å–Ω–æ–º, –≤—ñ–¥–ø—Ä–∞–≤ –º–µ–Ω—ñ –π–æ–≥–æ –Ω–∏–∂—á–µ ‚¨áÔ∏è',

    { parse_mode: 'HTML' },
  );
}
